<style>
    #updated_note {
        width: 100%;
        padding: 50px 0;
        text-align: center;
        background-color: rgba(232, 232, 232, 0.489);
        margin-top: 20px;
        display: block;
    }
</style>


<hr>
<br>

<body>

    <br>

    <form action="/update_profile" id="profile_form" method="POST">
        <p><b>Account Linking</b></p>
        <br>
        <ul>Make sure you set the client to use the id token type of RS256 and the client is set to support Implicit
            Grant</ul>

        <ul>And make sure the u/p account has its email verified</ul>
        <pre id="updated_note"></pre>
        <br>

        <br>
    </form>
    <hr>

</body>

<div>
    <a class="btn-small branded" href="/profile">Profile</a>
</div>
<br>
<br>

<div>
    <a class="btn-small branded" href="/logout">Logout</a>
</div>

<script>

    function show_update() {
        var x = document.getElementById("updated_note");
        x.style.display = "block";
    }

    function getPostPromise(url, type, data) {
        return new Promise(function (resolve, reject) {
            $.ajax({
                url: url,
                type: type,
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer {{accessToken}}',
                },
                data: data,
                success: resolve,
                error: reject
            });
        });
    }

    function parseJwt(token) {
        var base64Url = token.split('.')[1];
        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
        var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {
            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
        }).join(''));

        return JSON.parse(jsonPayload);
    }


    $(function () {

        const parsedHash = new URLSearchParams(
            window.location.hash.substring(1) // skip the first char (#)
        );

        $(document).ready(function () {

            var meta_data_url, meta_data_type, meta_data_data
            var identity_data_url, identity_data_type, identity_data_data

            var id_token = parseJwt(parsedHash.get("id_token"))

            meta_data_url = '{{meta_data_url}}'
            meta_data_type = 'PATCH'
            meta_data_data = JSON.stringify({ user_metadata: id_token.user_metadata })

            identity_data_url = '{{identity_url}}'
            identity_data_type = 'POST'
            identity_data_data = JSON.stringify({ "link_with": parsedHash.get("id_token") })

            getPostPromise(meta_data_url, meta_data_type, meta_data_data).then((output) => {
                getPostPromise(identity_data_url, identity_data_type, identity_data_data).then((output) => {

                    $('#updated_note').text(JSON.stringify(output, null, 2));

                })
                    .catch((err) => {
                        $('#updated_note').text(JSON.stringify(err, null, 2));
                    })

            })
                .catch((err) => {
                    $('#updated_note').text(JSON.stringify(err, null, 2));
                })

        });

    })

</script>