<style>
    #notifications {
        width: 100%;
        height: 150px;
        padding: 10px;
        text-align: left;
        background-color: rgba(232, 232, 232, 0.785);
        margin-top: 20px;
        overflow: scroll;
        white-space: pre-wrap;
    }

    .column {
        float: left;
        width: 50%;
        padding: 10px;
        height: 100%;
    }

    .row:after {
        content: "";
        display: table;
        clear: both;
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

    .switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 26px;
        width: 26px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        -webkit-transition: .4s;
        transition: .4s;
    }

    input:checked+.slider {
        background-color: #2196F3;
    }

    input:focus+.slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked+.slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }

    #spinner:not([hidden]) {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    #spinner::after {
        content: "";
        width: 80px;
        height: 80px;
        border: 2px solid #f3f3f3;
        border-top: 3px solid #182af4;
        border-radius: 100%;
        will-change: transform;
        animation: spin 1s infinite linear
    }

    @keyframes spin {
        from {
            transform: rotate(0deg);
        }

        to {
            transform: rotate(360deg);
        }
    }

    #notificationbar {
        background-color: rgba(249, 110, 110, 0.251);
        padding: 2px;
        text-align: center;
    }
</style>


<form action="/logout">
    <input class="btn-small branded" type="submit" value="Logout" />
</form>

<body>
    <br>

    <div id="notificationbar">
        <ul>This solution integrates <i>existing</i> Travel0, Property0 and Generic0 apps into the demo.okta private
            cloud and demo.okta builder.<br> It is provided 'as is'.<br>With the deprecation of portal.auth0.cloud on
            Feb 1st 23, no support will be provided for any migrated applications.</ul>
    </div>

    <div hidden id="spinner"></div>

    <hr>

    <div class="row">

        <p><b>Migrate your demo into demo.okta</b></p>
        <ul>Using this solution you can integrate any existing demo in portal.auth0.cloud into demo.okta as well
            as
            leverage the new demo.okta CIC AWS Private Cloud.</ul>

        <ul>If you need to migrate your users, head <a href="https://auth0.com/docs/manage-users/user-migration"
                target="_blank">here</a> to learn how to use the CIC user migration tool.
            will need them below!</ul>

        <ul><b>NOTE: If you have already migrated or created a demo to the {{tenant}} tenant, you will be unable
                to
                migrate another demo into it: this reduces conflicts and issues. Instead, simply create a new
                tenant
                and
                create/migrate into that</b></ul>

        <hr>
        <div id="migration_tools_left">

            <form action="/migration/migrate_config" id="migrate_form" method="POST">

                <p><b>Name of demo to migrate</b></p>

                <input type="text" name="migrationDemoName" id="migrationDemoName" value="demo-okta-community" required
                    placeholder="Add the name of the demo you want to migrate. The subdomain of your Travel0 or Property0 tells you what this is" />
                <label for="migrationDemoName">Name of the Demo you want to migrate</label>



                <ul><b>We STRONGLY recommend backing up the tenant config of the tenant you are migrating from
                        BEFORE
                        migration. This follows any good migration
                        practice!</b> <br><br>Note that while exporting the configuration is non-destructive, having
                    a
                    copy
                    means that you can manually update values in the tenant you are migrating to based on the backed
                    up
                    config.</ul>

                <input type="button" class="btn-small branded" id="download_config" value="Download Config"
                    onclick="return confirm('Download started. Your file will be available shortly. Please store it safely'); " />
                <hr>
                <ul><b>While every effort has been made to migrate <i>everything</i>, in order to optimise the
                        process
                        offered here, we do not migrate Actions, Client Grants, back-end Feature Flags, General
                        Tenant
                        settings and Custom Domains. We saw these features creating many errors that broke the
                        process.</b>
                    <br><br>You
                    should be able to manually configure these features after the migration and this is why we
                    recommend
                    downloading your config.
                </ul>
                <hr>
                <p><b>Migration Destination Tenant</b></p>

                <ul>
                    <li>{{tenant}}</li>
                </ul>
                <input type="submit" class="btn-small branded" value="Migrate my demo!"
                    onclick="return confirm('Are you sure? By clicking Migrate, you understand that the tenant ' + '{{tenant}}' + ' will be changed and this change cannot be reversed'); " />
            </form>


        </div>

                    <div id="events">
                <p><b>Events</b></p>
                <pre id="notifications">> No events received yet...</pre>
            </div>
        <div class="column">


            <div id="main_left">
                <div>
                    <p><b>Your Tenant</b></p>

                    <ul>
                        <li id="your_tenant"></li>
                    </ul>
                    <p><b>Your Demos</b></p>
                    <ul id="list-container"></ul>
                    <label for="migrated_demo">Migrated from portal.auth0.cloud</label>
                    <br>
                    <label class="switch">
                        <input type="checkbox" id="migrated_demo" onclick="return false;">
                        <span></span>
                    </label>
                </div>
            </div>

        </div>

        <div class="column">

            <div id="main_right">

                <div id="travel0-only">
                    <p><b>Your Legacy Users</b></p>

                    <ul id="user-container"></ul>
                    <ul>Password: Auth0Dem0</ul>

                    <label for="demo_type">CIC Login Enabled</label>
                    <br>

                    <label class="switch">
                        <input type="checkbox" id="cic_login">
                        <span></span>

                    </label>

                    <br>
                    <label for="demo_type">Azure AD SSO</label>
                    <br>

                    <label class="switch">
                        <input type="checkbox" id="azure_ad">
                        <span></span>

                    </label>
                    <br>
                </div>

                <form action="/portal/mailtrap" id="mailtrap_form" method="POST">
                    <p><b>Mailtrap API Key</b></p>
                    <label for="mailtrap">Must be Mailtrap API v1</label>
                    <br>
                    <input type="text" name="mailtrap" id="mailtrap_input" placeholder="Mailtrap API Key" />
                    <br>
                    <input class="btn-small branded" type="submit" id="mailtrap_form" value="Add Key" />
                </form>
            </div>


            <div id="migration_tools_right">
            </div>
        </div>
    </div>
</body>

<script>

    function getPostPromise(url, type, data) {
        return new Promise(function (resolve, reject) {
            $.ajax({
                url: url,
                type: type,
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer {{accessToken}}',
                },
                data: data,
                success: resolve,
                error: reject
            });
        });
    }

    $(document).ready(function () {

        document.getElementById("main_left").style.display = 'none';
        document.getElementById("main_right").style.display = 'none';
        document.getElementById("travel0-only").style.display = 'none';
        document.getElementById("migration_tools_left").style.display = 'none';
        document.getElementById("migration_tools_right").style.display = 'none';
        document.getElementById("events").style.display = 'none';
        spinner.removeAttribute('hidden');

        var demo_url, api_type, api_data

        demo_url = '/portal/get_legacy_demo'
        api_type = 'POST'
        api_data = JSON.stringify({ demo_name: 'test' })

        getPostPromise(demo_url, api_type, api_data).then((output) => {

            if (output.Demo.raw.hasOwnProperty('demoOkta')) {

                if (output.Demo.raw.demoOkta === "migration") {
                    document.getElementById("migrated_demo").checked = true;
                }

                else {
                    document.getElementById("migrated_demo").checked = false;
                }

            }

            if (output.Demo === "No demo added yet") {

                document.getElementById('your_tenant').innerHTML = "<a href='" + '{{tenant}}' + "'>" + '{{tenant}}' + " </a>";
                document.querySelectorAll("a").forEach(a => {
                    a.setAttribute("rel", "noopener");
                    a.setAttribute("target", "_blank");
                });

                document.getElementById("main_left").style.display = 'none';
                document.getElementById("main_right").style.display = 'none';
                document.getElementById("travel0-only").style.display = 'none';
                document.getElementById("migration_tools_left").style.display = 'block';
                document.getElementById("migration_tools_right").style.display = 'block';
                document.getElementById("events").style.display = 'block';
                spinner.setAttribute('hidden', '');

                list = document.createElement("LI");
                list.innerHTML = output.Demo;
                list2 = document.createElement("LI");
                list2.innerHTML = output.Demo;
                document.getElementById('list-container').appendChild(list);
                document.getElementById('user-container').appendChild(list2);
                return;
            }

            window.localStorage.setItem('tenant_id', output.Demo.tenant_id);
            window.localStorage.setItem('demo_id', output.Demo.demo_id);
            window.localStorage.setItem('demo_name', output.Demo.raw.name);

            for (let i = 0; i < output.Demo.applications.length; i++) {
                list = document.createElement("LI");
                list.innerHTML = "<a href='" + output.Demo.applications[i] + "'>" + output.Demo.applications[i] + " </a>";

                document.getElementById('list-container').appendChild(list);
            }

            if (output.Demo.raw.templateData.type === 'property0') {
                 
                document.getElementById('your_tenant').innerHTML = "<a href='" + '{{tenant}}' + "'>" + '{{tenant}}' + " </a>";
                document.querySelectorAll("a").forEach(a => {
                    a.setAttribute("rel", "noopener");
                    a.setAttribute("target", "_blank");
                });

                document.getElementById("main_left").style.display = 'block';
                document.getElementById("main_right").style.display = 'block';
                document.getElementById("travel0-only").style.display = 'none';
                document.getElementById("migration_tools_left").style.display = 'none';
                document.getElementById("migration_tools_right").style.display = 'none';
                document.getElementById("events").style.display = 'none';
                spinner.setAttribute('hidden', '');

            }

            else {

                document.getElementById('your_tenant').innerHTML = "<a href='" + '{{tenant}}' + "'>" + '{{tenant}}' + " </a>";
                document.querySelectorAll("a").forEach(a => {
                    a.setAttribute("rel", "noopener");
                    a.setAttribute("target", "_blank");
                });

                document.getElementById("main_left").style.display = 'block';
                document.getElementById("main_right").style.display = 'block';
                document.getElementById("travel0-only").style.display = 'block';
                document.getElementById("migration_tools_left").style.display = 'none';
                document.getElementById("migration_tools_right").style.display = 'none';
                document.getElementById("events").style.display = 'none';
                spinner.setAttribute('hidden', '');

                var azureADflag = output.Demo.raw.flags[0].enabled;
                var auth0Loginflag = output.Demo.raw.flags[1].enabled


                if (auth0Loginflag) {
                    document.getElementById("cic_login").checked = true;

                }

                else {
                    document.getElementById("cic_login").checked = false;
                }

                if (azureADflag) {
                    document.getElementById("azure_ad").checked = true;

                }

                else {
                    document.getElementById("azure_ad").checked = false;
                }


                var users_url = '/portal/get_legacy_db_users'
                var users_data = JSON.stringify({
                    demo_name: output.Demo.raw.name
                })

                getPostPromise(users_url, api_type, users_data).then((output) => {
                    spinner.setAttribute('hidden', '');

                    for (let i = 0; i < output.Legacy_Users.data.length; i++) {
                        list = document.createElement("LI");
                        list.innerHTML = output.Legacy_Users.data[i].email;
                        document.getElementById('user-container').appendChild(list);

                    }

                }).catch((err) => {
                    spinner.setAttribute('hidden', '');
                    $('#notifications').text(JSON.stringify(err, null, 2));
                })


            }
        })
            .catch((err) => {
                spinner.setAttribute('hidden', '');
                $('#notifications').text(JSON.stringify(err, null, 2));
            })
    });

    $("#get_logs").click(function () {

        var api_url, api_type, api_data

        api_url = '/portal/get_legacy_logs'
        api_type = 'POST'
        api_data = JSON.stringify({
            demo_name: window.localStorage.getItem('demo_name')
        })

        getPostPromise(api_url, api_type, api_data).then((output) => {

            document.getElementById("events").style.display = 'block';
            $('#notifications').text(JSON.stringify(output, null, 1));

        })
            .catch((err) => {
                document.getElementById("events").style.display = 'block';
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

    $("#azure_ad").click(function () {

        var api_url, api_type, api_data

        api_url = '/portal/update_demo_flags'
        api_type = 'POST'

        api_data = JSON.stringify({
            demo_id: window.localStorage.getItem('demo_id'),
            flag_azure_ad_value: document.getElementById("azure_ad").checked
        })

        getPostPromise(api_url, api_type, api_data).then((output) => {
            document.getElementById("events").style.display = 'block';
            $('#notifications').text(JSON.stringify(output, null, 2));

        })
            .catch((err) => {
                document.getElementById("events").style.display = 'block';
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

    $("#cic_login").click(function () {

        var api_url, api_type, api_data

        api_url = '/portal/update_demo_flags'
        api_type = 'POST'
        api_data = JSON.stringify({
            demo_id: window.localStorage.getItem('demo_id'),
            flag_cic_value: document.getElementById("cic_login").checked
        })

        getPostPromise(api_url, api_type, api_data).then((output) => {
            document.getElementById("events").style.display = 'block';
            $('#notifications').text(JSON.stringify(output, null, 2));

        })
            .catch((err) => {
                document.getElementById("events").style.display = 'block';
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

    $("#mailtrap_form").submit(function (e) {

        e.preventDefault(); // avoid to execute the actual submit of the form.

        var form = $(this);
        var actionUrl = form.attr('action');
        var api_type = 'POST';
        var api_data = JSON.stringify({
            key: document.getElementById("mailtrap_input").value
        })

        getPostPromise(actionUrl, api_type, api_data).then((output) => {

            document.getElementById("events").style.display = 'block';
            $('#notifications').text("Mailtrap API Set");
            //$('#notifications').text(JSON.stringify(output.demo_creation, null, 2));

        })
            .catch((err) => {
                document.getElementById("events").style.display = 'block';
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

    $("#download_config").click(function (e) {

        var spinner = document.getElementById("spinner");
        spinner.removeAttribute('hidden');

        e.preventDefault(); // avoid to execute the actual submit of the form.

        var actionUrl = '/migration/migrate_config';

        var data = {
            "download": "true",
            "migrationDemoName": document.getElementById("migrationDemoName").value
        }

        $.ajax({
            type: "POST",
            url: actionUrl,
            data: data,
            success: function (data) {
                spinner.setAttribute('hidden', '');
                document.getElementById("events").style.display = 'block';

                if (data.hasOwnProperty("url")) {
                    var redirect = window.open(data.url, '_blank')
                }

                else {
                    document.getElementById("events").style.display = 'block';
                    spinner.setAttribute('hidden', '');
                    $('#notifications').text(JSON.stringify(data, null, 2));
                }
            },
            error: function (err) {
                document.getElementById("events").style.display = 'block';
                spinner.setAttribute('hidden', '');
                $('#notifications').text("Sometimes errors occur as there is A LOT of data flying around. Often, retrying the request evenutally works\n\n" + JSON.stringify(err, null, 2));

            }
        });

    });

    $("#migrate_form").submit(function (e) {

        var spinner = document.getElementById("spinner");
        spinner.removeAttribute('hidden');

        e.preventDefault(); // avoid to execute the actual submit of the form.

        var form = $(this);
        var actionUrl = form.attr('action');

        $.ajax({
            type: "POST",
            url: actionUrl,
            data: form.serialize(), // serializes the form's elements.
            success: function (data) {
                location.reload();
            },
            error: function (err) {
                document.getElementById("events").style.display = 'block';
                spinner.setAttribute('hidden', '');
                $('#notifications').text(JSON.stringify(err, null, 2));
            }
        });

    });

</script>