<style>
    #notifications {
        width: 100%;
        height: 300px;
        padding: 50px 0;
        text-align: left;
        background-color: rgba(232, 232, 232, 0.785);
        margin-top: 20px;
        overflow: scroll;
        white-space: pre-wrap;
    }

    .column {
        float: left;
        width: 50%;
        padding: 10px;
        height: 300px;
    }

    .row:after {
        content: "";
        display: table;
        clear: both;
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

    .switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 26px;
        width: 26px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        -webkit-transition: .4s;
        transition: .4s;
    }

    input:checked+.slider {
        background-color: #2196F3;
    }

    input:focus+.slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked+.slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }
</style>

<div>
    <a class="btn-small branded" href="/logout">Logout</a>
</div>



<body>

    <br>
    <div class="row">
        <div class="column">
            <p><b>Welcome</b></p>
            <ul>This solution is intended to support legacy usage of the portal.auth0.cloud apps Travel0 and Property0
            </ul>
            <ul>It provides a 1:1 mapping between the connected tenant and either an instance of Travel0 or Property0:
                your choice!</ul>
            <ul>It is supported by the Demo Community at Okta under a Best Efforts model</ul>

            <p><b>Your Demos</b></p>

            <ul id="list-container"></ul>

            <p><b>Your Tenant</b></p>

            <ul>
                <li>{{tenant}}</li>
            </ul>

            <p><b>Your Legacy Users</b></p>

            <ul id="user-container"></ul>
            <br>

            <label for="demo_type">CIC Login Enabled</label>
            <br>

            <label class="switch">
                <input type="checkbox" id="cic_login">
                <span></span>

            </label>

            <br>
            <label for="demo_type">Azure AD SSO</label>
            <br>

            <label class="switch">
                <input type="checkbox" id="azure_ad">
                <span></span>

            </label>
            <br>
            <form action="/portal/mailtrap" id="mailtrap_form" method="POST">
                <p><b>Mailtrap API Key</b></p>
                <label for="mailtrap">Must be Mailtrap API v1</label>

                <br>
                <input type="text" name="mailtrap" id="mailtrap_input" placeholder="Mailtrap API Key" />

                <br>

                <input class="btn-small branded" type="submit" id="mailtrap_form" value="Add Key" />

            </form>

        </div>

        <div class="column">
            <form action="/portal/create_legacy_demo" id="create_demo" method="POST">
                <p><b>Create Legacy Demo</b></p>
                <label for="demo_type">Please select your demo app:</label>
                <select style="display: block;" name="demo_type" id="demo_type">
                    <option value="Travel0">Travel0</option>
                    <option value="Property0">Property0</option>
                </select>

                <br>
                <label for="demo">Demo Name</label>
                <input type="text" name="demo_name" id="demo_name" placeholder="Enter Your Demo Name" />

                <br>
                <br>
                <input class="btn-small branded" type="submit" value="Create Legacy Demo"
                    onclick="return confirm('Are you sure? By clicking Create, you understand that your CIC tenant will be completely overwritten with a new demo configuration'); " />

                {{!-- <br>
                <br>
                <input class="btn-small branded" type="button" id="get_demos" value="Get Demos" />

                <br>
                <br>
                <input class="btn-small branded" type="button" id="get_tenants" value="Get Tenants" />

                <br>
                <br>
                <input class="btn-small branded" type="button" id="get_legacy_db_users" value="Legacy DB Users" /> --}}


                <br>
                <br>
                <input class="btn-small branded" type="button" id="get_logs" value="Logs" />

                <br>
                <br>
                <input class="btn-small branded" type="button" id="clear_demo" value="Clear Demo"
                    onclick="return confirm('Are you sure? By clicking Clear, you understand that this will clear all demo applications, meaning they will no longer exist. However, your CIC tenant will remain live and can be reusued'); " />

            </form>
            <br>
            <p><b>Events</b></p>
            <pre id="notifications"></pre>
        </div>
    </div>
</body>



<script>

    function getPostPromise(url, type, data) {
        return new Promise(function (resolve, reject) {
            $.ajax({
                url: url,
                type: type,
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer {{accessToken}}',
                },
                data: data,
                success: resolve,
                error: reject
            });
        });
    }

    $(document).ready(function () {

        var demo_url, api_type, api_data

        demo_url = '/portal/get_legacy_demo'
        api_type = 'POST'
        api_data = JSON.stringify({ demo_name: 'test' })

        getPostPromise(demo_url, api_type, api_data).then((output) => {

            if (output.Demo === "No demo added yet") {
                list = document.createElement("LI");
                list.setAttribute("href", "#");
                list.innerHTML = output.Demo;
                list2 = document.createElement("LI");
                list2.setAttribute("href", "#");
                list2.innerHTML = output.Demo;
                document.getElementById('list-container').appendChild(list);
                document.getElementById('user-container').appendChild(list2);
                return;
            }


            for (let i = 0; i < output.Demo.applications.length; i++) {
                list = document.createElement("LI");
                list.setAttribute("href", "#");
                list.innerHTML = output.Demo.applications[i];
                document.getElementById('list-container').appendChild(list);

            }

            var azureADflag = output.Demo.raw.flags[0].enabled;
            var auth0Loginflag = output.Demo.raw.flags[1].enabled


            if (auth0Loginflag) {
                document.getElementById("cic_login").checked = true;

            }

            else {
                document.getElementById("cic_login").checked = false;
            }

            if (azureADflag) {
                document.getElementById("azure_ad").checked = true;

            }

            else {
                document.getElementById("azure_ad").checked = false;
            }


            window.localStorage.setItem('tenant_id', output.Demo.tenant_id);
            window.localStorage.setItem('demo_id', output.Demo.demo_id);
            window.localStorage.setItem('demo_name', output.Demo.raw.name);

            var users_url = '/portal/get_legacy_db_users'
            var users_data = JSON.stringify({
                demo_name: output.Demo.raw.name
            })


            getPostPromise(users_url, api_type, users_data).then((output) => {

                for (let i = 0; i < output.Legacy_Users.data.length; i++) {
                    list = document.createElement("LI");
                    list.setAttribute("href", "#");
                    list.innerHTML = output.Legacy_Users.data[i].email;
                    document.getElementById('user-container').appendChild(list);

                }

            }).catch((err) => {
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

        })
            .catch((err) => {
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

    $("#get_demos").click(function () {

        var demo_url, api_type, api_data

        demo_url = '/portal/get_legacy_demo'
        api_type = 'POST'
        api_data = JSON.stringify({ demo_name: 'test' })

        getPostPromise(demo_url, api_type, api_data).then((output) => {
            for (let i = 0; i < output.Demo.applications.length; i++) {
                list = document.createElement("LI");
                list.setAttribute("href", "#");
                list.innerHTML = output.Demo.applications[i];
                document.getElementById('list-container').appendChild(list);

            }

            var azureADflag = output.Demo.raw.flags[0].enabled;
            var auth0Loginflag = output.Demo.raw.flags[1].enabled


            if (auth0Loginflag) {
                document.getElementById("cic_login").checked = true;

            }

            else {
                document.getElementById("cic_login").checked = false;
            }

            if (azureADflag) {
                document.getElementById("azure_ad").checked = true;

            }

            else {
                document.getElementById("azure_ad").checked = false;
            }


            window.localStorage.setItem('tenant_id', output.Demo.tenant_id);
            window.localStorage.setItem('demo_id', output.Demo.demo_id);
            window.localStorage.setItem('demo_name', output.Demo.raw.name);

            var users_url = '/portal/get_legacy_db_users'
            var users_data = JSON.stringify({
                demo_name: output.Demo.raw.name
            })


            getPostPromise(users_url, api_type, users_data).then((output) => {

                for (let i = 0; i < output.Legacy_Users.data.length; i++) {
                    list = document.createElement("LI");
                    list.setAttribute("href", "#");
                    list.innerHTML = output.Legacy_Users.data[i].email;
                    document.getElementById('user-container').appendChild(list);

                }

            }).catch((err) => {
                console.log('cat')
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

        })
            .catch((err) => {
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

    $("#get_tenants").click(function () {

        var api_url, api_type, api_data

        api_url = '/portal/get_legacy_tenants'
        api_type = 'POST'
        api_data = JSON.stringify({ demo_name: 'test' })

        getPostPromise(api_url, api_type, api_data).then((output) => {

            $('#notifications').text(JSON.stringify(output, null, 2));

        })
            .catch((err) => {
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

    $("#get_logs").click(function () {

        var api_url, api_type, api_data

        api_url = '/portal/get_legacy_logs'
        api_type = 'POST'
        api_data = JSON.stringify({
            demo_name: window.localStorage.getItem('demo_name')
        })

        getPostPromise(api_url, api_type, api_data).then((output) => {

            $('#notifications').text(JSON.stringify(output, null, 2));

        })
            .catch((err) => {
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

    $("#get_legacy_db_users").click(function () {

        var api_url, api_type, api_data

        api_url = '/portal/get_legacy_db_users'
        api_type = 'POST'
        api_data = JSON.stringify({
            demo_name: window.localStorage.getItem('demo_name')
        })

        getPostPromise(api_url, api_type, api_data).then((output) => {

            $('#notifications').text(JSON.stringify(output, null, 2));

        })
            .catch((err) => {
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

    $("#azure_ad").click(function () {

        var api_url, api_type, api_data

        api_url = '/portal/update_demo_flags'
        api_type = 'POST'

        api_data = JSON.stringify({
            demo_id: window.localStorage.getItem('demo_id'),
            flag_azure_ad_value: document.getElementById("azure_ad").checked
        })

        getPostPromise(api_url, api_type, api_data).then((output) => {

            $('#notifications').text(JSON.stringify(output, null, 2));

        })
            .catch((err) => {
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

    $("#cic_login").click(function () {

        var api_url, api_type, api_data

        api_url = '/portal/update_demo_flags'
        api_type = 'POST'
        api_data = JSON.stringify({
            demo_id: window.localStorage.getItem('demo_id'),
            flag_cic_value: document.getElementById("cic_login").checked
        })

        getPostPromise(api_url, api_type, api_data).then((output) => {

            $('#notifications').text(JSON.stringify(output, null, 2));

        })
            .catch((err) => {
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

    $("#clear_demo").click(function () {

        var api_url, api_type, api_data

        api_url = '/portal/get_legacy_tenants'
        api_type = 'POST'
        api_data = JSON.stringify({ clear: "true" })

        getPostPromise(api_url, api_type, api_data).then((output) => {

            window.localStorage.clear()
            $('#notifications').text("Demo Clear requested successfully!\nPlease wait a few moments before continuing as it can take a while for deletion to complete");
            //$('#notifications').text(JSON.stringify(output, null, 2));

        })
            .catch((err) => {
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

    $("#create_demo").submit(function (e) {

        e.preventDefault(); // avoid to execute the actual submit of the form.

        var form = $(this);
        var actionUrl = form.attr('action');
        var api_type = 'POST';
        var api_data = JSON.stringify({
            demo_name: document.getElementById("demo_name").value,
            demo_type: document.getElementById("demo_type").value,
        })

        getPostPromise(actionUrl, api_type, api_data).then((output) => {

            window.localStorage.clear()
            window.localStorage.setItem('tenant_id', output.demo_creation.results[0].tenantId);
            window.localStorage.setItem('demo_id', output.demo_creation.results[0]._id);
            window.localStorage.setItem('demo_name', output.demo_creation.results[0].name);

            var logs_url, api_type, log_data

            logs_url = '/portal/get_legacy_logs'
            api_type = 'POST'
            api_data = JSON.stringify({
                demo_name: output.demo_creation.results[0].name
            })

            getPostPromise(logs_url, api_type, log_data).then((output) => {

                $('#notifications').text("Demo Creation requested successfully!\nPlease wait a few moments before continuing as it can take a while for creation to complete");

            })
                .catch((err) => {
                    $('#notifications').text(JSON.stringify(err, null, 2));
                })

        })
            .catch((err) => {
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

    $("#mailtrap_form").submit(function (e) {

        e.preventDefault(); // avoid to execute the actual submit of the form.

        var form = $(this);
        var actionUrl = form.attr('action');
        var api_type = 'POST';
        var api_data = JSON.stringify({
            key: document.getElementById("mailtrap_input").value
        })

        console.log('hit')

        getPostPromise(actionUrl, api_type, api_data).then((output) => {

            $('#notifications').text("Mailtrap API Set");
            //$('#notifications').text(JSON.stringify(output.demo_creation, null, 2));

        })
            .catch((err) => {
                $('#notifications').text(JSON.stringify(err, null, 2));
            })

    });

</script>